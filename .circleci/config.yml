version: 2.1
build_workflow: &build_workflow
  context: org-global
  filters:
    tags:
      only: /.*/

deploy_workflow: &deploy_workflow
  context: org-global
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /v.*/

defaults: &defaults
  docker:
    - image: ubuntu:18.04

defaults_osx: &defaults_osx
  macos:
    xcode: "16.2.0"
  environment:
    HOMEBREW_NO_AUTO_UPDATE: 1

install_ghr: &install_ghr
  run:
    name: Install ghr (Github Releases)
    command: |
      apt update
      apt install -qq wget --yes
      wget https://github.com/tcnksm/ghr/releases/download/v0.16.2/ghr_v0.16.2_linux_amd64.tar.gz
      tar xf ghr_v0.16.2_linux_amd64.tar.gz
      ln -sf ghr_v0.16.2_linux_amd64/ghr .

build: &build
  steps:
    - checkout
    - restore_cache:
        key: fwup-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
    - run:
        name: Install Deps
        command: scripts/ci_install_deps.sh
    - run:
        name: Build
        command: scripts/ci_build.sh
    - run:
        name: Copy out artifacts
        command: scripts/ci_deploy.sh
    - store_artifacts:
        path: artifacts
        destination: artifacts
    - run:
        command: mkdir -p ./artifacts
    - persist_to_workspace:
        root: ./
        paths:
          - artifacts
    - save_cache:
        key: fwup-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
        paths:
          - dl

build_osx: &build_osx
  steps:
    - checkout
    - run:
        name: Install Deps
        command: scripts/ci_install_deps.sh
    - run:
        name: Build
        command: scripts/ci_build.sh
    - store_artifacts:
        path: tests
        destination: tests
    - store_artifacts:
        path: artifacts
        destination: artifacts
    - run:
        command: mkdir -p ./artifacts
    - persist_to_workspace:
        root: ./
        paths:
          - artifacts

jobs:
  linux_gcc_static:
    <<: *defaults
    environment:
      CIRCLE_OS_NAME: linux
      MODE: static
    <<: *build
  linux_gcc_dynamic:
    <<: *defaults
    environment:
      CIRCLE_OS_NAME: linux
      MODE: dynamic
    <<: *build
  linux_gcc_windows:
    docker:
      - image: ubuntu:24.04
    environment:
      CIRCLE_OS_NAME: linux
      MODE: windows
      DEBIAN_FRONTEND: noninteractive
      TZ: "America/New_York"
    <<: *build
  linux_gcc_raspberrypi:
    <<: *defaults
    environment:
      CIRCLE_OS_NAME: linux
      MODE: raspberrypi
    <<: *build
  linux_gcc_singlethread:
    <<: *defaults
    environment:
      CIRCLE_OS_NAME: linux
      MODE: singlethread
    <<: *build
  linux_gcc_minimal:
    <<: *defaults
    environment:
      CIRCLE_OS_NAME: linux
      MODE: minimal
    <<: *build
  osx_clang_dynamic:
    <<: *defaults_osx
    environment:
      CIRCLE_OS_NAME: osx
      MODE: dynamic
    <<: *build
  osx_clang_static:
    <<: *defaults_osx
    environment:
      CIRCLE_OS_NAME: osx
      MODE: static
    <<: *build
  deploy:
    <<: *defaults
    steps:
      - restore_cache:
          key: fwup-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - <<: *install_ghr
      - attach_workspace:
          at: ./
      - run:
          name: Create release notes
          command: grep -Pazo "(?s)(?<=## ${CIRCLE_TAG})[^#]+" artifacts/CHANGELOG.md | sed '/./,$!d' > /tmp/RELEASE_NOTES
      - run:
          name: Deploy artifacts to Github
          command: ./ghr -draft -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -b "$(cat /tmp/RELEASE_NOTES)" -replace $CIRCLE_TAG artifacts

workflows:
  version: 2
  build_deploy:
    jobs:
      - linux_gcc_static:
          <<: *build_workflow
      - linux_gcc_dynamic:
          <<: *build_workflow
      - linux_gcc_windows:
          <<: *build_workflow
      - linux_gcc_raspberrypi:
          <<: *build_workflow
      - linux_gcc_singlethread:
          <<: *build_workflow
      - linux_gcc_minimal:
          <<: *build_workflow
      - osx_clang_dynamic:
          <<: *build_workflow
      - osx_clang_static:
          <<: *build_workflow
      - deploy:
          requires:
            - linux_gcc_static
            - linux_gcc_dynamic
            - linux_gcc_windows
            - linux_gcc_raspberrypi
            - linux_gcc_singlethread
            - linux_gcc_minimal
            - osx_clang_dynamic
            - osx_clang_static
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
